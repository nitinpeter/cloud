#Aws cloudformation template for a custom windows web-server with apps build on boottime
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSRegionArch2AMI:
    us-east-1:
      dev: ami-0412e100c0177fb4b
    us-west-2:
      dev: ami-024c2d542738e461b
    us-west-1:
      dev: ami-047ce89c62c8f180e
    us-east-2:
      dev: ami-0354df7841220296c
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        #config:
        configSets:
          default:
            - 00_setupChocolatey
            - 01_ChocoInstalls
        00_setupChocolatey:
          files:
            "C:\\Users\\Administrator\\Documents\\choscript.ps1":
              content: |
                [System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true};
                [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
            "C:\\Users\\Administrator\\Documents\\chopack.ps1":
              content: |
                cd C:\\ProgramData\\chocolatey\\bin ;
                choco install saltminion -y
                choco install rabbitmq -y
                choco install filebeat -y
        01_ChocoInstalls:
          commands:
            01_chocolatey:
              command: powershell -Command "C:\\Users\\Administrator\\Documents\\choscript.ps1"
            02_setpath:
              command:  SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
            03_salt:
              command: powershell -Command "cd C:\\ProgramData\\chocolatey\\bin && choco install saltminion -y"
            04_rabbitmq:
              command: powershell -Command "C:\\Users\\Administrator\\Documents\\chopack.ps1"

    Properties:
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      UserData: 
        Fn::Base64: !Sub |
          <script>
          cfn-init.exe -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets default
          cfn-signal.exe -e %errorlevel% --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
          </script>
        #Fn::Join:
        #  - ''
        #  - - "<script>\n"
        #    - 'cfn-init.exe -v -c config -s '
        #    - !Ref 'AWS::StackId'
        #    - ' -r EC2Instance'
        #    - ' --region '
        #    - !Ref 'AWS::Region'
        #    - "\n"
        #    - "</script>\n"
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - dev
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via RDP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref SSHLocation
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 578de650-9ae7-4a2d-8caa-6ebc5990a94b
    DependsOn:
      - EC2Instance
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicIp
